{"version":3,"sources":["assets/img/bg31.jpg","components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ColorNavbar","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","navbarColor","setNavbarColor","useEffect","window","addEventListener","changeNavbarColor","removeEventListener","document","documentElement","scrollTop","body","react_default","a","createElement","Fragment","Navbar","className","expand","Container","NavbarBrand","to","id","UncontrolledCollapse","navbar","toggler","Row","Col","xs","href","onClick","e","preventDefault","Nav","UncontrolledDropdown","nav","DropdownToggle","caret","color","DropdownMenu","DropdownItem","target","aria-hidden","right","tag","NavbarText","account","width","height","src","concat","Identicon","toString","alt","Main","lg","md","Input","aria-label","name","placeholder","type","Button","bg","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","token","ethSwap","ethBalance","tokenBalance","loading","loadWeb3","loadBlockchainData","web3","eth","getAccounts","accounts","setState","getBalance","net","getId","newtorkId","tokenData","Token","networks","Contract","abi","address","methods","balanceOf","alert","ethSwapData","EthSwap","ethereum","Web3","enable","content","role","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7eb70f22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg31.4a59c5ee.jpg\";","import React from 'react'\n// reactstrap components\nimport identicon from 'identicon.js'\nimport {\n  Button,\n  UncontrolledCollapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  Nav,\n  NavbarText,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n} from 'reactstrap'\nimport Identicon from 'identicon.js'\n\nexport default function ColorNavbar(props) {\n  const [navbarColor, setNavbarColor] = React.useState('navbar-transparent')\n  React.useEffect(() => {\n    window.addEventListener('scroll', changeNavbarColor)\n    return function cleanup() {\n      window.removeEventListener('scroll', changeNavbarColor)\n    }\n  }, [])\n  const changeNavbarColor = () => {\n    if (\n      document.documentElement.scrollTop > 299 ||\n      document.body.scrollTop > 299\n    ) {\n      setNavbarColor('bg-warning')\n    } else if (\n      document.documentElement.scrollTop < 300 ||\n      document.body.scrollTop < 300\n    ) {\n      setNavbarColor('navbar-transparent')\n    }\n  }\n  return (\n    <>\n      <Navbar className={'fixed-top ' + navbarColor} expand='lg'>\n        <Container>\n          <div className='navbar-translate'>\n            <NavbarBrand to='/index' id='tooltip6619950104'>\n              <span>BCTâ€¢</span> Blue Collar Token\n            </NavbarBrand>\n            <button className='navbar-toggler' id='navigation'>\n              <span className='navbar-toggler-bar bar1' />\n              <span className='navbar-toggler-bar bar2' />\n              <span className='navbar-toggler-bar bar3' />\n            </button>\n          </div>\n          <UncontrolledCollapse navbar toggler='#navigation'>\n            <div className='navbar-collapse-header'>\n              <Row>\n                <Col className='collapse-brand' xs='6'>\n                  <a href='#pablo' onClick={(e) => e.preventDefault()}>\n                    BCTâ€¢ <span>Token Swap</span>\n                  </a>\n                </Col>\n                <Col className='collapse-close text-right' xs='6'>\n                  <button className='navbar-toggler' id='navigation'>\n                    <i className='tim-icons icon-simple-remove' />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav className='ml-auto' navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle caret color='default' nav>\n                  <i className='fa fa-cogs d-lg-none d-xl-none' />\n                  Blue Collar Projects\n                </DropdownToggle>\n                <DropdownMenu className='dropdown-with-icons'>\n                  <DropdownItem to='/index'>\n                    <i className='tim-icons icon-paper' />\n                    Components\n                  </DropdownItem>\n                  <DropdownItem to='/presentation'>\n                    <i className='tim-icons icon-bullet-list-67' />\n                    Presentation Page\n                  </DropdownItem>\n                  <DropdownItem\n                    href='https://demos.creative-tim.com/blk-design-system-pro-react/#/documentation/overview?ref=blkdspr-pages-navbar'\n                    target='_blank'\n                  >\n                    <i className='tim-icons icon-book-bookmark' />\n                    Documentation\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n\n              <UncontrolledDropdown nav>\n                <DropdownToggle caret color='default' nav>\n                  <i\n                    aria-hidden={true}\n                    className='tim-icons icon-book-bookmark'\n                  />\n                  <p>Examples</p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem to='/about-us'>\n                    <i className='tim-icons icon-bulb-63' />\n                    About-us\n                  </DropdownItem>\n                  <DropdownItem to='/blog-post'>\n                    <i className='tim-icons icon-align-center' />\n                    Blog Post\n                  </DropdownItem>\n                  <DropdownItem to='/blog-posts'>\n                    <i className='tim-icons icon-chart-bar-32' />\n                    Blog Posts\n                  </DropdownItem>\n                  <DropdownItem to='/contact-us'>\n                    <i className='tim-icons icon-square-pin' />\n                    Contact Us\n                  </DropdownItem>\n                  <DropdownItem to='/landing-page'>\n                    <i className='tim-icons icon-paper' />\n                    Landing Page\n                  </DropdownItem>\n                  <DropdownItem to='/pricing'>\n                    <i className='tim-icons icon-coins' />\n                    Pricing\n                  </DropdownItem>\n                  <DropdownItem to='/ecommerce'>\n                    <i className='tim-icons icon-basket-simple' />\n                    Ecommerce Page\n                  </DropdownItem>\n                  <DropdownItem to='/product-page'>\n                    <i className='tim-icons icon-bag-16' />\n                    Product Page\n                  </DropdownItem>\n                  <DropdownItem to='/profile-page'>\n                    <i className='tim-icons icon-lock-circle' />\n                    Profile Page\n                  </DropdownItem>\n                  <DropdownItem to='/404-error'>\n                    <i className='tim-icons icon-button-power' />\n                    404 Error Page\n                  </DropdownItem>\n                  <DropdownItem to='/500-error'>\n                    <i className='tim-icons icon-alert-circle-exc' />\n                    500 Error Page\n                  </DropdownItem>\n                  <UncontrolledDropdown>\n                    <DropdownToggle\n                      caret\n                      color='default'\n                      className='dropdown-item'\n                      tag='a'\n                      href='#pablo'\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      <i\n                        aria-hidden={true}\n                        className='tim-icons icon-book-bookmark'\n                      />\n                      App Pages\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem to='/account-settings'>\n                        <i className='tim-icons icon-lock-circle' />\n                        Account Settings\n                      </DropdownItem>\n                      <DropdownItem to='/login-page'>\n                        <i className='tim-icons icon-tablet-2' />\n                        Login Page\n                      </DropdownItem>\n                      <DropdownItem to='/register-page'>\n                        <i className='tim-icons icon-laptop' />\n                        Register Page\n                      </DropdownItem>\n                      <DropdownItem to='/reset-page'>\n                        <i className='tim-icons icon-molecule-40' />\n                        Reset Page\n                      </DropdownItem>\n                      <DropdownItem to='/invoice-page'>\n                        <i className='tim-icons icon-notes' />\n                        Invoice Page\n                      </DropdownItem>\n                      <DropdownItem to='/checkout-page'>\n                        <i className='tim-icons icon-basket-simple' />\n                        Checkout Page\n                      </DropdownItem>\n                      <DropdownItem to='/chat-page'>\n                        <i className='tim-icons icon-email-85' />\n                        Chat Page\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <NavbarText>\n                <span className='text-warning'>Acct:</span> {props.account}\n              </NavbarText>\n              {props.account ? (\n                <img\n                  className='ml-2 my-auto'\n                  width='30'\n                  height='30'\n                  src={`data:image/png;base64,${new Identicon(\n                    props.account,\n                    30\n                  ).toString()}`}\n                  alt='identicon image'\n                />\n              ) : (\n                <span></span>\n              )}\n            </Nav>\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  )\n}\n","/*!\n\n=========================================================\n* BLK Design System PRO React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from 'react'\n\n// reactstrap components\nimport { Button, Input, Container, Row, Col } from 'reactstrap'\n\nimport bg from '../assets/img/bg31.jpg'\n\n// core components\n\nexport default function Main() {\n  return (\n    <>\n      <Container>\n        <Row className='align-items-center text-left full'>\n          <Row>\n            <Col lg='12 text-center'>\n              <h1 className='title'>\n                Swap Currency <br />\n                <strong className='text-warning'>Blue Collar Token</strong>\n              </h1>\n            </Col>\n            <Col\n              className='ml-auto mr-auto bg-white rounded'\n              lg='7'\n              md='8'\n              xs='12'\n            >\n              <h1 className='title'>\n                Swap Currency <br />\n                <strong className='text-warning'>Blue Collar Token</strong>\n              </h1>\n              <p className='description'>\n                We aim high at being focused on building relationships with our\n                clients and community. Using our creative gifts drives this\n                foundation.\n              </p>\n              <Row className='row-input'>\n                <Col className='mt-1' md='8' xs='6'>\n                  <Input\n                    aria-label='Your email'\n                    id='signupSrEmail'\n                    name='email'\n                    placeholder='Your email'\n                    type='email'\n                  />\n                </Col>\n                <Col md='4' xs='6'>\n                  <Button color='warning'>Get Started</Button>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Row>\n        <Row className='mt-5 pt-5 mb-5'>\n          <img src={bg}></img>\n        </Row>\n      </Container>\n    </>\n  )\n}\n","import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Token from '../abis/Token.json'\nimport EthSwap from '../abis/EthSwap.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport './App.css'\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const ethBalance = await web3.eth.getBalance(this.state.account)\n    this.setState({ ethBalance })\n\n    //Load Token\n    const newtorkId = await web3.eth.net.getId()\n    const tokenData = Token.networks[newtorkId]\n    if (tokenData) {\n      const token = new web3.eth.Contract(Token.abi, tokenData.address)\n      this.setState({ token })\n      let tokenBalance = await token.methods\n        .balanceOf(this.state.account)\n        .call()\n      this.setState({ tokenBalance: tokenBalance.toString() })\n    } else {\n      window.alert('Token Contract not deployed to detected network')\n    }\n\n    //Load EthSwap\n    const ethSwapData = EthSwap.networks[newtorkId]\n    if (ethSwapData) {\n      const ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address)\n      this.setState({ ethSwap })\n    } else {\n      window.alert('ethSwap Contract not deployed to detected network')\n    }\n\n    this.setState({ loading: false })\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    return false\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      token: {},\n      ethSwap: {},\n      ethBalance: '0',\n      tokenBalance: '0',\n      loading: true,\n    }\n  }\n\n  render() {\n    let content\n    if (this.state.loading) {\n      content = (\n        <p id='loader' className='text-center'>\n          Loading.......\n        </p>\n      )\n    } else {\n      content = <Main />\n    }\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className='container-fluid mt-5'>\n          <div className='row'>\n            <main role='main' className='col-lg-12 d-flex text-center'>\n              <div className='content mr-auto ml-auto'>{content}</div>\n            </main>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport './assets/css/nucleo-icons.css'\nimport './assets/css/blk-design-system-pro-react.css'\nimport './assets/demo/demo.css'\nimport './assets/demo/react-demo.css'\nimport './components/App.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}